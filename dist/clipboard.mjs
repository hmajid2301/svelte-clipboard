import { SvelteComponent, init, safe_not_equal, globals, element, append, create_slot, space, attr, insert, get_slot_context, get_slot_changes, transition_in, transition_out, detach, binding_callbacks } from 'svelte/internal';
import { createEventDispatcher, tick } from 'svelte';

/* src/Clipboard.svelte generated by Svelte v3.20.1 */

const { document: document_1 } = globals;

function add_css() {
	var style = element("style");
	style.id = "svelte-w8w2mp-style";
	style.textContent = "textarea.svelte-w8w2mp{left:0;bottom:0;margin:0;padding:0;opacity:0;width:1px;height:1px;border:none;display:block;position:absolute}";
	append(document_1.head, style);
}

const get_default_slot_changes = dirty => ({});
const get_default_slot_context = ctx => ({ copy: /*copy*/ ctx[2] });

function create_fragment(ctx) {
	let t;
	let textarea_1;
	let current;
	const default_slot_template = /*$$slots*/ ctx[5].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[4], get_default_slot_context);

	return {
		c() {
			if (default_slot) default_slot.c();
			t = space();
			textarea_1 = element("textarea");
			textarea_1.value = /*text*/ ctx[0];
			attr(textarea_1, "class", "svelte-w8w2mp");
		},
		m(target, anchor) {
			if (default_slot) {
				default_slot.m(target, anchor);
			}

			insert(target, t, anchor);
			insert(target, textarea_1, anchor);
			/*textarea_1_binding*/ ctx[6](textarea_1);
			current = true;
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 16) {
					default_slot.p(get_slot_context(default_slot_template, ctx, /*$$scope*/ ctx[4], get_default_slot_context), get_slot_changes(default_slot_template, /*$$scope*/ ctx[4], dirty, get_default_slot_changes));
				}
			}

			if (!current || dirty & /*text*/ 1) {
				textarea_1.value = /*text*/ ctx[0];
			}
		},
		i(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (default_slot) default_slot.d(detaching);
			if (detaching) detach(t);
			if (detaching) detach(textarea_1);
			/*textarea_1_binding*/ ctx[6](null);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	const dispatch = createEventDispatcher();
	let { text } = $$props;
	let textarea;

	async function copy() {
		textarea.select();
		document.execCommand("Copy");
		await tick();
		textarea.blur();
		dispatch("copy");
	}

	let { $$slots = {}, $$scope } = $$props;

	function textarea_1_binding($$value) {
		binding_callbacks[$$value ? "unshift" : "push"](() => {
			$$invalidate(1, textarea = $$value);
		});
	}

	$$self.$set = $$props => {
		if ("text" in $$props) $$invalidate(0, text = $$props.text);
		if ("$$scope" in $$props) $$invalidate(4, $$scope = $$props.$$scope);
	};

	return [text, textarea, copy, dispatch, $$scope, $$slots, textarea_1_binding];
}

class Clipboard extends SvelteComponent {
	constructor(options) {
		super();
		if (!document_1.getElementById("svelte-w8w2mp-style")) add_css();
		init(this, options, instance, create_fragment, safe_not_equal, { text: 0 });
	}
}

export default Clipboard;
